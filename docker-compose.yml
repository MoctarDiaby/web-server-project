# docker-compose.yml
version: "3.8"
services:
  nginx:
    container_name: nginx
    build: ./nginx
    command: nginx -g "daemon off;"
    links:
      - wordpress
    ports:
      - "80:80"
    volumes:
      - ./logs/nginx:/var/log/nginx
      - ./src:/var/www/html
      - wordpress_data:/var/www/html
    networks:
      - wordpress_net
  php:
    build:
      container_name: php
      context: ./php
      dockerfile: Dockerfile
    ports:
      - "9000"
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
 
 # Service pour WordPress
  wordpress:
    build:
      context: ./wordpress
      dockerfile: Dockerfile
    container_name: wordpress
    environment:
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: wordpress_user
      WORDPRESS_DB_PASSWORD: wordpress_password
    volumes:
      - wordpress_data:/var/www/html
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - db
    networks:
      - wordpress_net
    ports:
      - "9000:9000" # WordPress accessible sur le port 9000

 # Service pour la base de données MariaDB
  db:
    build:
      context: ./mariadb
      dockerfile: Dockerfile
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: example_root_password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress_user
      MYSQL_PASSWORD: wordpress_password
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - wordpress_net
      
#   # Service pour Nginx
#   nginx:
#     build:
#       context: ./nginx
#       dockerfile: Dockerfile
#     container_name: nginx
#     volumes:
#       - wordpress_data:/var/www/html  # Utiliser le volume partagé
#     ports:
#       - "8080:80" # Nginx écoute sur le port 80
#     networks:
#       - wordpress_net

networks:
  wordpress_net:
    driver: bridge

volumes:
  db_data:
  wordpress_data:  # Volume partagé entre WordPress et Nginx
